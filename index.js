const Manager = require("./lib/Manager");
const Engineer = require("./lib/Engineer");
const Intern = require("./lib/Intern");
const inquirer = require("inquirer");
const path = require("path");
const fs = require("fs");


//Path module defines where the resulting html file should go: into a directory called output. The two lines below were supplied as starter code and I have put them in the renderHTML function
const OUTPUT_DIR = path.resolve(__dirname, "output");
const outputPath = path.join(OUTPUT_DIR, "team.html");

//How is this render constant worked into renderHTML?
const render = require("./src/page-template.js");


// TODO: Write Code to gather information about the development team members, and render the HTML file. NOTE the HTML is already laid out in page-template.js

//Rough prompt layout using Inquirer, wrapped in a function (need async keyword for sure?)
async function promptUser() {
    return inquirer
      .prompt([
        {
            type: 'input',
            name: 'name',
            message: 'Enter employee name',
        },
    
        {
            type: 'list',
            name: 'role',
            message: 'Choose employee role',
            choices: ['Manager', 'Engineer', 'Intern'],
            //is there a point in making a choice here if there are now three subclasses?
        },
       
    
        {
            type: 'input',
            name: 'email',
            message: 'Please enter employee email address',
            //change to just username and include @fakemail.com elsewhere?
        },

        {
            type: 'input',
            name: 'github',
            message: 'Please enter your GitHub username',
            //for Engineer subclass only
        },

        {
            type: 'input',
            name: 'offNum',
            message: 'Please enter your office number',
            //for Manager subclass only
        },

        {
            type: 'input',
            name: 'school',
            message: 'Please enter your School name',
            //for Intern subclass only
        },
      ]);
    }

    // Is ID autogenerated for each person? Does it have to correspond to the screengrab i.e. Managers are assigned first numbers and interns later numbers with Engineers in the middle?


    //Code to render the html - where define data/input?
    async function renderHTML(data) {

       // file path and directory path were already defined in supplied code using path node module

        const OUTPUT_DIR = path.resolve(__dirname, "output");
        const outputPath = path.join(OUTPUT_DIR, "team.html");

       //Need to mkdir "output" using fs. The try and catch methods wrapper below comes from node.js documentation. Can it be combined with the existing constants like this? Is this redundant if running tests?
       
       try {
        if (!fs.existsSync(OUTPUT_DIR)) {
          fs.mkdirSync(OUTPUT_DIR);
        }
      } catch (err) {
        console.error(err);
      }
    
      //Add user input (currently 'data' - does it need to be stringified?) to the html using fs's writeFile method
     

      //code with callback catching errors is from node.js documentation. Again, how does this error callback effect testing?

      //how do I pull in the render constant/html template supplied in starter code (as below)?
      //const render = require("./src/page-template.js");

      fs.writeFile('outputPath', data, err =>{
        if (err) {
            console.error("This is your error writing to file:", err);
        } else {
            console.log("Your data has been written to:", outputPath);
        }
      });
       
    }

    //function to run both promptUser and renderHTML
    //again is try and catch unnecessary with testing methods?
    // why the need to define userData here?

    async function runBoth() {
        try {
            const userData = await promptUser();
        } catch (err) {
            console.error("This is your error from runBoth:", err)
        }
    }

    runBoth();

  

